var Bus = new Class({
	Implements:Debuggable,
	instanceName : "Bus",
	subscriptions : [],
	typeName: "Bus",
	

	initialize : function() {
		var alredyInstanciated = ($defined(document[this.instanceName]));
		if (!alredyInstanciated) {
			document[this.instanceName] = this;
		}
		return document[this.instanceName];
	},

	subscribe : function(subscriber, event) {
		if (!this.subscriptionExists(subscriber, event)) {
			this.subscriptions.push([ subscriber, event ]);
		}
	},
	
	subscribers : function(theEvent) {
		var selectedSubscribers = [];
		this.subscriptions.each(function(subscription) {
			if (subscription[1] == theEvent) {
				selectedSubscribers.push(subscription[0]);
			}
		});
		
		return selectedSubscribers;
	},

	hasSubscriptions : function() {
		return this.subscriptions.length > 0;
	},

	subscriptionExists : function(subscriber, event) {
		var result=false;
		var theSubscription=[ subscriber, event ];
		for ( var index=0; index<this.subscriptions.length ;index++)
		 {
			var subscription=this.subscriptions[index];
			var sameSubscriber = (subscription[0] == theSubscription[0]);
			var sameEvent = (subscription[1] == theSubscription[1]);
			if (sameSubscriber && sameEvent) {
				result=true;
				break;
			}
		 }
		
		return result;
	},

	
	emit : function(event, params) {
		
		this.debug ("Bus.emit (event, params)");
		this.debug (event);
		this.debug (params);
		this.debug ("------------");
		
		this.subscribers(event).each(function(subscriber) {
			subscriber.eventDispatch(event, params);
		});
	},

	unsubscribe : function(subscriber, events) {
		events.each(function(event) {
			var theSubscription = [ subscriber, event ];
			this.removeSubscription(theSubscription);
		}, this);

	},

	removeSubscription : function(theSubscription) {
		this.subscriptions.each(function(subscription) {
			var sameSubscriber = (subscription[0] == theSubscription[0]);
			var sameEvent = (subscription[1] == theSubscription[1]);
			if (sameSubscriber && sameEvent) {
				this.subscriptions.erase(subscription);
			}
		}, this);
	},

	reset : function() {
		this.subscriptions = [];
	}
});